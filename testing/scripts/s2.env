#!/bin/bash

### Basic vars #######################################################
Export cdate `date '+%Y%m%d-%H%M%S'`
Export S2_P `basename ${ProgramName} .sh`.p
Export S2_D `basename ${ProgramName} .sh`.d
Export S2_E `basename ${ProgramName} .sh`.err
#Export S2_E `basename ${ProgramName} .sh`.d
Export S2_L `basename ${ProgramName} .sh`.l
Export S2_W ${S2_E}
Export S2_OUT `basename ${ProgramName} .sh`.out
Export S2_LOG `basename ${ProgramName} .sh`.log
Export S2_E0 `basename ${ProgramName} .sh`.e0
Export S2_E1 `basename ${ProgramName} .sh`.e1
Export S2_E2 `basename ${ProgramName} .sh`.e2
#Export S2_ERR /dev/stderr
#Export S2_OUT /dev/stdout

### Diagnostics ######################################################
# diagnose library related variables (see libdiagnose project for more)
#Export DG_DIAGNOSE 0	# no diagnostics at all (logging/debug/warnings/errors)
#			# recompile without diagnostics if you need even better
#			# performance (./configure [options] --disable-dg*)

## Debugging; (2^29+2^30=1610612736; DM_DBG_I/DM_DBG_O)
Export DG_DBG 1610612767		# set debugging mask (2^0+2^1..2^n); all disabled if unset
#Export DG_DBG_FILE "(process\.cpp)"	# limit debugging to these files; all enabled if unset
#Export DG_DBG_FILEv "(parse\.cpp|s2\.cpp)"
Export DG_DBG_FILEv "(thread_pool\.c)"	# no debugging from these files
#Export DG_DBG_FUNCv "(dq_param|Node)"	# no debugging from these functions

## Logging
Export DG_LOG 7				# limit logging mask (2^0+2^1..2^n); all enabled if unset
#Export DG_LOG_FILE "(process\.cpp)"	# limit logging to these files; all enabled if unset
#Export DG_LOG_FILEv "(process\.cpp)"	# no logging from these files
#Export DG_LOG_FUNCv "(dq_param|Node)"	# no logging from these functions

## Warnings and errors
# similar environment variables as above, see libdiagnose project, but you don't want
# to limit these, do you?!
