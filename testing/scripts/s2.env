#!/bin/bash

### Basic vars #######################################################
export cdate=`date '+%Y%m%d-%H%M%S'`
export S2_P=`basename ${ProgramName} .sh`.p
export S2_D=`basename ${ProgramName} .sh`.d
#export S2_E=`basename ${ProgramName} .sh`.err
export S2_E=`basename ${ProgramName} .sh`.d
export S2_L=`basename ${ProgramName} .sh`.l
export S2_W=${S2_E}
export S2_OUT=`basename ${ProgramName} .sh`.out
export S2_ERR=`basename ${ProgramName} .sh`.err
export S2_LOG=`basename ${ProgramName} .sh`.log
export S2_E0=`basename ${ProgramName} .sh`.e0
export S2_E1=`basename ${ProgramName} .sh`.e1
export S2_E2=`basename ${ProgramName} .sh`.e2
#export S2_ERR=/dev/stderr
#export S2_OUT=/dev/stdout

### Diagnostics ######################################################
# diagnose library related variables (see libdiagnose project for more)
#export DG_DIAGNOSE=0	# no diagnostics at all (logging/debug/warnings/errors)
#			# recompile without diagnostics if you need even better
#			# performance (./configure [options] --disable-dg*)

## Debugging 
export DG_DBG=31	# set debugging mask (2^0+2^1..2^n); all disabled if unset
#export DG_DBG_FILE="(process\.cpp)"	# limit debugging to these files; all enabled if unset
#export DG_DBG_FILEv="(parse\.cpp|s2\.cpp)"
export DG_DBG_FILEv="(thread_pool\.c)"	# no debugging from these files
#export DG_DBG_FUNCv="(dq_param|Node)"	# no debugging from these functions

## Logging
export DG_LOG=7		# limit logging mask (2^0+2^1..2^n); all enabled if unset
#export DG_LOG_FILE="(process\.cpp)"	# limit logging to these files; all enabled if unset
#export DG_LOG_FILEv="(process\.cpp)"	# no logging from these files
#export DG_LOG_FUNCv="(dq_param|Node)"	# no logging from these functions

## Warnings and errors
# similar environment variables as above, see libdiagnose project, but you don't want
# to limit these, do you?!
