% Tests nested directories up to a level of at least 8
%
% srmMkdir
% srmLs
% srmRmdir

TEST $MATCH{(?P<srmTest>.*).s2$ ${0}}

>0&&8 SYSTEM echo 'looping to mkdir'

  ASSIGN depth $I{0}
  && SYSTEM echo Loop ${depth}

  && ASSIGN MYPATH ""
  && ASSIGN PATHADD $ENV{SRM_NEW_DIR0}

  && >0&&${depth} ASSIGN MYPATH "${MYPATH}${PATHADD}"
    ASSIGN PATHADD "/x"

  && SYSTEM echo "Path is ${MYPATH}"

  && srmMkdir $ENV{ENDPOINT} SURL=${MYPATH} returnStatus.explanation=(?P<returnStatus_explanation>.*) returnStatus.statusCode=(?P<returnStatus_statusCode>.*)

  && TEST $MATCH{(SRM_SUCCESS) ${returnStatus_statusCode}}
     srmLs $ENV{ENDPOINT} SURL[${MYPATH}] requestToken=(?P<requestToken>.*) pathDetails=(?P<pathDetails>.*) returnStatus.explanation=(?P<returnStatus_explanation>.*) returnStatus.statusCode=(?P<returnStatusLs_statusCode>.*)

|| SYSTEM echo "${srmTest}: KO: ${-returnStatus_statusCode} ${-returnStatus_explanation}" >> $ENV{SRM2_SUPPORTED} && exit ${!}

&& >8&&0 SYSTEM echo 'looping to rmdir'

  ASSIGN depth $I{0}
  && SYSTEM echo Loop ${depth}

  && ASSIGN MYPATH ""
  && ASSIGN PATHADD $ENV{SRM_NEW_DIR0}

  && >0&&${depth} ASSIGN MYPATH "${MYPATH}${PATHADD}"
    ASSIGN PATHADD "/x"

  && SYSTEM echo "Path is ${MYPATH}"
  && srmRmdir $ENV{ENDPOINT} SURL=${MYPATH} returnStatus.explanation=(?P<returnStatus_explanation>.*) returnStatus.statusCode=(?P<returnRmdir_statusCode>.*)

&& SYSTEM echo "${srmTest}: OK: ${returnStatus_statusCode}" >> $ENV{SRM2_SUPPORTED} && exit 0
|| SYSTEM echo "${srmTest}: KO: ${-returnStatus_statusCode} ${-returnStatus_explanation}" >> $ENV{SRM2_SUPPORTED} && exit ${!}
