The S2 language
~~~~~~~~~~~~~~~
Please see the s2.txt document for information about the language.


Testing directory
~~~~~~~~~~~~~~~~~
After you've copied the testing directory into a directory with
read-write permissions, please take a few minutes to familiarise
yourself with its design.  Overview of the most important files and
directories:

bin/s2.sh       wrapper around the s2 binary sourcing s2.env files
                in a directory-recursive fashion and speeding-up
                development by optionally calling valgrind and gdb.
mk/             directory containing generic makefiles
scripts/        directory containing s2 test scripts, please refer to 
                README files within those directories.

Every script directory contains a Makefile.  This Makefile has three
aims.  Firstly, to provide a way of automatically creating <script>.sh
files for <script>.s2 files which link to the s2.sh script (make ln).
In this way, all test are run with the same parameters in a unified
way.  Secondly, it provides a bulk testing functionality by running
all test (make test).  Thirdly, it removes all files generated by a
test run and symbolic links to the s2.sh script (make clean).

Please try
$ make help

for additional information.

Every <script>.s2 can have a corresponding <script>.env file, which
defines <script>-specific environment variables.  Directory-wide 
environment variables are defined in s2.env files.


s2.sh script output files
~~~~~~~~~~~~~~~~~~~~~~~~~
*.d     debug output of the diagnose library.  Verbosity can be
        limited, please see the documentation for libdiagnose.
*.e0    before-execution log messages
*.e1    after-execution log messages
*.e2    after-evaluation log messages
*.err   messages sent to standard error
*.l     log file of the s2 binary
*.log   log file of the an s2 script
*.out   messages sent to standard output
*.p     "pretty-printed" s2 script


Quick start
~~~~~~~~~~~
1) Make sure the s2 binary in PATH.
2) Copy the testing directory to a directory where you have RW permissions.
3) cd testing/scripts/eval
4) Run a couple of test scripts and examine the s2.sh script output files.
   To run all tests contained in the directory, type
   make test
5) Read s2.txt document if you get stuck.


SRM 2.x tests
~~~~~~~~~~~~~
The s2 SRM2 test scripts are located the
testing/scripts/protos/srm/{2.1,2.2}/{basic,usecase} directories.
Make sure you change your settings in directory-wide s2.env or
script-related .env files.  The minimum change you will need to
make is to select SRM_ENDPOINT.


Request for help
~~~~~~~~~~~~~~~~
Please help improve this project by:
 * reporting s2 bugs, errors in documentation, etc.
 * creating and contributing back SRM 2.2 test scenarios
 * providing feedback
 * new developers and/or patches that work and apply cleanly against
   CVS head or at least the latest advertised CVS tag are very welcome
 