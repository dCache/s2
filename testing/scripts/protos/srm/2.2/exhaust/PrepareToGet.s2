TEST $MATCH{(?P<srmTest>.*).s2$ ${0}}
  #include ../include/Exhaust.s2

DEFUN srmTest authorizationID fileRequests.SURL fileRequests.isSourceADirectory fileRequests.allLevelRecursive fileRequests.numOfLevels userRequestDescription storageSystemInfo.key storageSystemInfo.value desiredFileStorageType desiredTotalRequestTime desiredPinLifeTime targetSpaceToken retentionPolicy accessLatency accessPattern connectionType clientNetworks transferProtocols
   >0&&17 NOP
      >0&&$EXPR{2*($I{1}==0)} FUN ExhString $I{0} authorizationID ${authorizationID} : arg0
         >0&&$EXPR{2*($I{2}==1)} FUN ExhString $I{0} fileRequests.SURL ${fileRequests.SURL} : arg1
            >0&&$EXPR{2*($I{3}==2)} FUN ExhBool $I{0} fileRequests.isSourceADirectory ${fileRequests.isSourceADirectory} : arg2
               >0&&$EXPR{2*($I{4}==3)} FUN ExhBool $I{0} fileRequests.allLevelRecursive ${fileRequests.allLevelRecursive} : arg3
                  >0&&$EXPR{2*($I{5}==4)} FUN ExhInt $I{0} fileRequests.numOfLevels ${fileRequests.numOfLevels} : arg4
                     >0&&$EXPR{2*($I{6}==5)} FUN ExhString $I{0} userRequestDescription ${userRequestDescription} : arg5
                        >0&&$EXPR{2*($I{7}==6)} FUN ExhString $I{0} storageSystemInfo.key ${storageSystemInfo.key} : arg6
                           >0&&$EXPR{2*($I{8}==7)} FUN ExhString $I{0} storageSystemInfo.value ${storageSystemInfo.value} : arg7
                              >0&&$EXPR{2*($I{9}==8)} FUN ExhFileStorageType $I{0} desiredFileStorageType ${desiredFileStorageType} : arg8
                                 >0&&$EXPR{2*($I{10}==9)} FUN ExhTime $I{0} desiredTotalRequestTime ${desiredTotalRequestTime} : arg9
                                    >0&&$EXPR{2*($I{11}==10)} FUN ExhTime $I{0} desiredPinLifeTime ${desiredPinLifeTime} : arg10
                                       >0&&$EXPR{2*($I{12}==11)} FUN ExhString $I{0} targetSpaceToken ${targetSpaceToken} : arg11
                                          >0&&$EXPR{2*($I{13}==12)} FUN ExhRetentionPolicy $I{0} retentionPolicy ${retentionPolicy} : arg12
                                             >0&&$EXPR{2*($I{14}==13)} FUN ExhAccessLatency $I{0} accessLatency ${accessLatency} : arg13
                                                >0&&$EXPR{2*($I{15}==14)} FUN ExhAccessPattern $I{0} accessPattern ${accessPattern} : arg14
                                                   >0&&$EXPR{2*($I{16}==15)} FUN ExhConnectionType $I{0} connectionType ${connectionType} : arg15
                                                      >0&&$EXPR{2*($I{17}==16)} FUN ExhString $I{0} clientNetworks ${clientNetworks} : arg16
                                                         >0&&$EXPR{2*($I{18}==17)} FUN ExhString $I{0} transferProtocols ${transferProtocols} : arg17
                                                            ASSIGN c $EXPR{${c}+1}
                                                            && ASSIGN script "eval=2 srmPrepareToGet $ENV{ENDPOINT} ${arg0}${arg1}${arg2}${arg3}${arg4}${arg5}${arg6}${arg7}${arg8}${arg9}${arg10}${arg11}${arg12}${arg13}${arg14}${arg15}${arg16}${arg17}requestToken=(?P<requestToken>.*) fileStatuses=(?P<fileStatuses>.*) remainingTotalRequestTime=(?P<remainingTotalRequestTime>.*) returnStatus.explanation=(?P<returnStatus_explanation>.*) returnStatus.statusCode=(SRM_SUCCESS|SRM_DONE|SRM_REQUEST_QUEUED|SRM_REQUEST_INPROGRESS)"
                                                            && FUN S2 ${script} $PRINTF{%02d ${c}}
                                                            ; Ignore errors
                                                            || NOP

;;; main() ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
&& ASSIGN c 0
;&& <CODE FROM BASIC>
&& FUN srmTest $ENV{USER} ${fileRequests.SURL} ${fileRequests.isSourceADirectory} ${fileRequests.allLevelRecursive} ${fileRequests.numOfLevels} ${userRequestDescription} ${storageSystemInfo.key} ${storageSystemInfo.value} ${desiredFileStorageType} ${desiredTotalRequestTime} ${desiredPinLifeTime} ${targetSpaceToken} ${retentionPolicy} ${accessLatency} ${accessPattern} ${connectionType} ${clientNetworks} ${transferProtocols}
