Prerequisites
~~~~~~~~~~~~~
First of all, it is recommended that you install the
globus packages listed under <Source distribution> if you are planning to use
globus-url-copy command to do the actual file transfers, and that
your /etc/grid-security/certificates contains valid certificates
(ca_* packages).


RPM-haters section
~~~~~~~~~~~~~~~~~~
This guide shows how to build RPM packages. There are at least two ways of
getting a package of your choice from an RPM package:

1) You can use `alien' to convert the package between several major
   package formats.  For example, to get a gzipped tar ball:

# alien -t <RPM>

2) You can convert the RPM into a CPIO archive and unpack the files:

# rpm2cpio <RPM> > <RPM>.cpio
# cpio -id --verbose < <RPM>.cpio


Binary distribution
~~~~~~~~~~~~~~~~~~~

The <RPM> is installed by 
# rpm -ivh <RPM>


Source distribution
~~~~~~~~~~~~~~~~~~~

This has been tested on CentOS 7.3 and all required packages were installed from the EPEL repository (Extra Packages for Enterprise Linux 7 - x86_64). 

You'll need:

* PCRE (Perl Compatible Regular Expressions) library >= 4.4
  http://www.pcre.org/ (used pcre-8.32)
* diagnose library >= 0.3.8 (used 0.3.12.3) (optional in principal, but 
  you are strongly advised to use it.)
  http://libdiagnose.sourceforge.net

If you require SRM 2.2 protocol support, you'll also need:

* globus libraries: globus-common, globus-gss-assist, globus-gssapi-gsi, globus-open-ssl and globus libraries to satisfy dependencies of these packages
* gSOAP (used 2.8.16)
* CGSI_gSOAP (used 1.3.10)

To build the RPM file you need:

* The devel files for the globus, gSOAP and CGSI-gSOAP libraries
* doxygen
* rpm-build 

Note that in the case that the globus libraries are already present on your system as part of the condor-external-libs package, you may encounter linker errors after installing the devel files from the EPEL reopsitory. Export LD_LIBRARY_PATH=/usr/lib64 (or where the globus libs are located) both - at compile and runtime - to avoid linking to the incompatible libraries in your condor installation. 

To build the binaries use:
 
$ ./configure --help
$ ./configure --enable-srm22 && make
$ make install [prefix=your_prefix]
$ make rpm

Note that if you just want to play with the S2 language and do not
want SRM support, use
$ ./configure

Testing directory
~~~~~~~~~~~~~~~~~
A simple test framework was created in the testing directory.
The framework generates all kinds of diagnostics files, therefore
it is recommended to copy/move it to a directory where users have
read-write permissions.
