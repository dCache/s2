Prerequisites
~~~~~~~~~~~~~
First of all, it is recommended that you install the
vdt_globus_essentials package if you are planning to use
globus-url-copy command to do the actual file transfers, and that
your /etc/grid-security/certificates contains valid certificates
(ca_* packages).


RPM-haters section
~~~~~~~~~~~~~~~~~~
Due to the pressure from my work colleagues, I've decided to distribute
RPM packages.  As far as I know, there are at least two ways of
getting a package of your choice from an RPM package:

1) You can use `alien' to convert the package between several major
   package formats.  For example, to get a gzipped tar ball:

# alien -t <RPM>

2) You can convert the RPM into a CPIO archive and unpack the files:

# rpm2cpio <RPM> > <RPM>.cpio
# cpio -id --verbose < <RPM>.cpio


Binary distribution
~~~~~~~~~~~~~~~~~~~
The S2 binary has been compiled on a Scientifix Linux 3.0.5 Fermi, and
was successfully tested on SL 3.0.5 and SL 4.3 (Fermi).  It has been
compiled as well on Scientifix Linux 3 and 4 CERN. You will need
compat-libstdc++-33 to use the binary on SL 4.3.

The <RPM> is installed by 
# rpm -ivh <RPM>


Source distribution
~~~~~~~~~~~~~~~~~~~
You'll need:

* PCRE (Perl Compatible Regular Expressions) library >= 4.4
  http://www.pcre.org/
* diagnose library >= 0.3.8 (optional in principal, but 
  you are strongly advised to use it)
  http://libdiagnose.sourceforge.net

If you require SRM 2.2 protocol support, you'll also need:

* vdt_globus_essentials (I used the one that comes with SL 3.0.5,
  i.e.: VDT1.2.2rh9-1)
* vdt_globus_sdk if you want to build globus libraries statically
  (I used the one that comes with SL 3.0.5, i.e.: VDT1.2.2rh9-1)
* gSOAP 2.7.2 (precisely this version)
  http://www.cs.fsu.edu/~engelen/soap.html
  e.g.:
  http://heanet.dl.sourceforge.net/sourceforge/gsoap2/gsoap_2.7.2.tar.gz
  or use the source RPM which is being released with this project
  on SourceForge.
* CGSI_gSOAP_2.7 plugin (I used CGSI_gSOAP_2.7-1.1.9)
  http://cern.ch/castor/DIST/CERN/savannah/CGSI_gSOAP.pkg

$ ./configure --help
$ ./configure --enable-srm22 && make
$ make install [prefix=your_prefix]
$ make rpm

Note that if you just want to play with the S2 language and do not
want SRM support, use
$ ./configure

Testing directory
~~~~~~~~~~~~~~~~~
A simple test framework was created in the testing directory.
The framework generates all kinds of diagnostics files, therefore
it is recommended to copy/move it to a directory when users have
read-write permissions.
