% GetRemoved01: 
% This test checks if the system allows for retrieval of a removed file.
%
% SRM calls performed by the test:
% --------------------------------
% srmPrepareToPut
% srmStatusOfPutRequest
% srmPutDone
% srmPrepareToGet
% srmStatusOfGetRequest

TEST $MATCH{(?P<srmTest>.*).s2$ ${0}}
   #include ../include/PutCycle.s2
   #include ../include/GetCycle.s2


&& SYSTEM echo "${srmTest}: Putting file" >> "$ENV{S2_LOG}"

&& FUN PutCycle "$ENV{FILE_TO_PUT0}" "$ENV{SRM_NEW_FILE0}" : putRequestToken

&& SYSTEM echo "${srmTest}: Deleting the file again" >> "$ENV{S2_LOG}"

&& srmRm $ENV{ENDPOINT} SURL[$ENV{SRM_NEW_FILE0}] fileStatuses=(?P<fileStatuses>.*) returnStatus.explanation=(?P<returnStatus_explanation>.*) returnStatus.statusCode=(?P<returnStatus_statusCode>.*)

&& SYSTEM echo "${srmTest}: Now trying to get the file (prepareToGet)" >> "$ENV{S2_LOG}"

&& NOP
  srmPrepareToGet $ENV{ENDPOINT} fileRequests.SURL[$ENV{SRM_NEW_FILE0}] desiredFileStorageType=$ENV{STORAGE_TYPE} transferProtocols[$ENV{TRANS_PROT0} $ENV{TRANS_PROT1}] desiredTotalRequestTime=2700 requestToken=(?P<getRequestToken>.*) fileStatuses=(?P<ptgFileStatuses>.*) returnStatus.statusCode=(SRM_SUCCESS|SRM_PARTIAL_SUCCESS|SRM_REQUEST_QUEUED|SRM_REQUEST_INPROGRESS)
  && SYSTEM echo "${srmTest}: srmPrepareToGet, getRequestToken=${getRequestToken} fileStatuses: ${ptgFileStatuses}" >> "$ENV{S2_LOG}"
  && >0||3 SLEEP 20
    srmStatusOfGetRequest $ENV{ENDPOINT} requestToken=${getRequestToken} SURL[$ENV{SRM_NEW_FILE0}] fileStatuses=".*Status.statusCode0=(?P<StatusCode0>.+?)(\s.+|$)" returnStatus.explanation=(?P<rs_explanation>.*) returnStatus.statusCode=SRM_FAILURE
  && TEST $MATCH{SRM_INVALID_PATH ${StatusCode0}}
  && SYSTEM echo "${srmTest}: OK: s2: removed file couldn't be retrieved, file status ${StatusCode0}" >> "$ENV{SRM2_SUPPORTED}" && exit 0
  || SYSTEM echo "${srmTest}: KO (s2: srmStatusOfGetRequest succeeded on a removed file, or status code (was ${-StatusCode0}) not SRM_INVALID_PATH)" >> "$ENV{SRM2_SUPPORTED}" && exit 0
|| SYSTEM echo "${srmTest}: KO: ${returnStatus_statusCode} Something strange has happened" >> "$ENV{SRM2_SUPPORTED}" && exit 1
