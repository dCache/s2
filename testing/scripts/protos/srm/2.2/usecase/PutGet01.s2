% PutGet01: transfer of a file to/from SRM server
%
% srmPrepareToGet
% srmPrepareToPut
% srmPutDone
% srmStatusOfGetRequest
% srmStatusOfPutRequest

#include ../include/PutCycle.s2
#include ../include/GetCycle.s2
;; TEST $MATCH{(?P<srmTest>.*).s2$ ${0}}
;; ASSIGN Status 0

&& FUN PutCycle $ENV{FILE_TO_PUT0} $ENV{SRM_NEW_FILE0} : putRequestToken
&& FUN GetCycle $ENV{FILE_TO_GET0} $ENV{SRM_NEW_FILE0} : getRequestToken

&& SYSTEM echo "${srmTest}: OK" >> "$ENV{SRM2_SUPPORTED}"
|| ASSIGN Status ${!}
   SYSTEM echo "${srmTest}: KO ${-returnStatus_explanation}" >> "$ENV{SRM2_SUPPORTED}" && exit ${!}

;; srmRm $ENV{ENDPOINT} SURL[$ENV{SRM_NEW_FILE0}] fileStatuses=(?P<fileStatuses>.*) returnStatus.explanation=(?P<returnStatus_explanation>.*) returnStatus.statusCode=(?P<returnStatus_statusCode>.*)
;; SYSTEM rm -f $ENV{FILE_TO_GET0}

;; SYSTEM exit ${Status}

